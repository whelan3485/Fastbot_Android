apply plugin: 'com.android.library'

android {
    namespace 'com.android.commands.monkey'
    compileSdkVersion 36

    defaultConfig {
        minSdkVersion 22
        targetSdkVersion 36
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner" // Updated from support library
        multiDexEnabled true
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
    }

    buildTypes {
        debug {
            debuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    externalNativeBuild {
        cmake {
            path "../native/CMakeLists.txt"
            version "4.0.3"
        }
    }

    packagingOptions {
        jniLibs {
            useLegacyPackaging false
        }
    }

    ndkVersion '25.2.9519653'
}

repositories {
    google() // Add Google's Maven repository
    mavenCentral()
}

dependencies {
    compileOnly files('libs/framework.jar')
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'com.vdurmont:emoji-java:5.0.0'
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile).configureEach {
        options.bootstrapClasspath = files('libs/framework.jar') + options.bootstrapClasspath
    }
}

task clearJar(type: Delete) {
    delete 'build/libs/monkey.jar'
}

/*task makeJar(type: Jar) {
    from('build/intermediates/aar_main_jar/release/')
    include('classes.jar')
    archiveBaseName = 'monkey'
    destinationDirectory = file("build/libs/")
}*/

task makeJar(type: Jar) {
    def jarFile = fileTree("build/intermediates/aar_main_jar/").matching {
        include "**/release/classes.jar"
    }.singleFile
    from zipTree(jarFile)
    archiveBaseName = "monkey"
    destinationDirectory = file("build/libs/")
}

makeJar.dependsOn(clearJar, assemble)